<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Robot Shell</title>
  
  <subtitle>Futurevent</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://robotshell.com/"/>
  <updated>2019-08-12T06:32:26.234Z</updated>
  <id>http://robotshell.com/</id>
  
  <author>
    <name>robot</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Robot OS 框架杂谈（二）：语音交互各厂产品</title>
    <link href="http://robotshell.com/2018/06/26/Robot-OS-%E6%A1%86%E6%9E%B6%E6%9D%82%E8%B0%88%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E8%AF%AD%E9%9F%B3%E4%BA%A4%E4%BA%92%E5%90%84%E5%8E%82%E4%BA%A7%E5%93%81/"/>
    <id>http://robotshell.com/2018/06/26/Robot-OS-框架杂谈（二）：语音交互各厂产品/</id>
    <published>2018-06-26T12:07:19.000Z</published>
    <updated>2019-08-12T06:32:26.234Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;语音交互已经火了这么几年，涌现了许多的厂商。本文主要从什么是语音操作系统出发，到语音操作系统各公司的产品情况，到在语音交互下可以有哪些场景出发，做了总结。&lt;/p&gt;
    
    </summary>
    
      <category term="机器人OS" scheme="http://robotshell.com/categories/%E6%9C%BA%E5%99%A8%E4%BA%BAOS/"/>
    
      <category term="架构" scheme="http://robotshell.com/categories/%E6%9C%BA%E5%99%A8%E4%BA%BAOS/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="机器人" scheme="http://robotshell.com/tags/%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>android性能优化之帧率测试</title>
    <link href="http://robotshell.com/2018/06/21/android%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B9%8B%E5%B8%A7%E7%8E%87%E6%B5%8B%E8%AF%95/"/>
    <id>http://robotshell.com/2018/06/21/android性能优化之帧率测试/</id>
    <published>2018-06-21T10:17:49.000Z</published>
    <updated>2019-08-12T06:32:26.234Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;作为一名anroid开发，经常会听到产品或者测试说，他们感觉界面卡顿。然而这感觉二字该如何修改？须得以数字说话方可。&lt;/p&gt;
    
    </summary>
    
      <category term="android" scheme="http://robotshell.com/categories/android/"/>
    
      <category term="测试" scheme="http://robotshell.com/categories/android/%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="android" scheme="http://robotshell.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>Robot OS 框架杂谈</title>
    <link href="http://robotshell.com/2018/06/21/Robot-OS-%E6%A1%86%E6%9E%B6%E6%9D%82%E8%B0%88/"/>
    <id>http://robotshell.com/2018/06/21/Robot-OS-框架杂谈/</id>
    <published>2018-06-21T06:51:22.000Z</published>
    <updated>2019-08-12T06:32:26.234Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;大概是2015年开始，人工智能突起，出现了非常多家的机器人公司，其中有一类发力于家庭服务机器人。为了满足各家机器人的使用需要，各家争相开发自己的机器人OS，或者叫机器人框架。&lt;br&gt;时至今日，有的机器人OS已经死亡，有的奄奄一息，有的还在继续成长，有的已经成熟。有幸接触了几家的OS，现罗列如下，以作纪念。&lt;/p&gt;
    
    </summary>
    
      <category term="机器人OS" scheme="http://robotshell.com/categories/%E6%9C%BA%E5%99%A8%E4%BA%BAOS/"/>
    
      <category term="架构" scheme="http://robotshell.com/categories/%E6%9C%BA%E5%99%A8%E4%BA%BAOS/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="机器人" scheme="http://robotshell.com/tags/%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu grub 引导丢失修复</title>
    <link href="http://robotshell.com/2018/03/13/ubuntu-grub-%E5%BC%95%E5%AF%BC%E4%B8%A2%E5%A4%B1%E4%BF%AE%E5%A4%8D/"/>
    <id>http://robotshell.com/2018/03/13/ubuntu-grub-引导丢失修复/</id>
    <published>2018-03-13T13:45:50.000Z</published>
    <updated>2019-08-12T06:32:26.234Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;第一章-工作就得这么弄&quot;&gt;&lt;a href=&quot;#第一章-工作就得这么弄&quot; class=&quot;headerlink&quot; title=&quot;第一章 工作就得这么弄&quot;&gt;&lt;/a&gt;第一章 工作就得这么弄&lt;/h1&gt;&lt;p&gt;自己家的电脑，需要能写代码，也要能供不写代码的时候用，比起ubuntu来说，win10还是要好用非常多的，何况买的dell品牌台式机，win1o 是正版的，office是正版的，还有dell的一堆服务，废了多可惜啊，都是钱买的。所以一狠心，一咬牙装了个win10+ubuntu的双系统。&lt;/p&gt;
&lt;p&gt;两年了，除了装系统的时候费了点事，一直以来大家相安无事，各过各的。ubuntu一路从16.04升级到了17.10没出过任何叉子，windows10？还好吧，一直以来也本本分分的。&lt;/p&gt;
&lt;p&gt;直到昨天晚上，都要睡觉了，翻着墙看了个乐视网的微电影。这有毛病吗？关机的时候，点错了，关机按钮点到了重启上，这有毛病吗？然后就重启了，然后就没出现grub的引导，直接进入了win10。心里暗骂一句，微软流氓，肯定是悄悄升级了，还改了efi文件。多大点事啊，上网找个攻略修一下也就好了，遂找了一篇，照着鼓捣。这次倒好，直接提示，没有可引导的设备。&lt;/p&gt;
    
    </summary>
    
      <category term="技巧" scheme="http://robotshell.com/categories/%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="技巧" scheme="http://robotshell.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>android O 电源管理之从设备唤醒谈起</title>
    <link href="http://robotshell.com/2018/03/11/android-O-%E7%94%B5%E6%BA%90%E7%AE%A1%E7%90%86%E4%B9%8B%E4%BB%8E%E8%AE%BE%E5%A4%87%E5%94%A4%E9%86%92%E8%B0%88%E8%B5%B7/"/>
    <id>http://robotshell.com/2018/03/11/android-O-电源管理之从设备唤醒谈起/</id>
    <published>2018-03-11T05:39:30.000Z</published>
    <updated>2019-08-12T06:32:26.234Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;为何从此谈起&quot;&gt;&lt;a href=&quot;#为何从此谈起&quot; class=&quot;headerlink&quot; title=&quot;为何从此谈起&quot;&gt;&lt;/a&gt;为何从此谈起&lt;/h1&gt;&lt;p&gt;andoird PowerManagerService 中有一个成员变量mWakefulness，其定义如下：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Indicates whether the device is awake or asleep or somewhere in between.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// This is distinct from the screen power state, which is managed separately.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; mWakefulness;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;注释写的很明白，用来指示当前设备是醒是睡还是处于半醒半睡间的某中状态，本文即从此处讲起。&lt;/p&gt;
&lt;p&gt;无论设备电源状态如何变化，走了多少曲折的流程，最终会层层调用到对该变量的修改，用以指示设备电源变化后的状态，设备唤醒也不例外。常见的分析电源管理的文章多分析电源管理的框架结构及调用流程，鲜有对唤醒后，睡眠前其他模块所做工作的描述。本篇即主要阐述设备从睡眠状态唤醒，设置mWakefulness为WAKEFULNESS_AWAKE后，整个系统都做了些什么。&lt;/p&gt;
    
    </summary>
    
      <category term="android" scheme="http://robotshell.com/categories/android/"/>
    
    
      <category term="android" scheme="http://robotshell.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>Android包管理之App安装前的校验</title>
    <link href="http://robotshell.com/2018/02/06/Android%E5%8C%85%E7%AE%A1%E7%90%86%E4%B9%8BApp%E5%AE%89%E8%A3%85%E5%89%8D%E7%9A%84%E6%A0%A1%E9%AA%8C/"/>
    <id>http://robotshell.com/2018/02/06/Android包管理之App安装前的校验/</id>
    <published>2018-02-06T13:32:49.000Z</published>
    <updated>2019-08-12T06:32:26.234Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;初识Package-Verification&quot;&gt;&lt;a href=&quot;#初识Package-Verification&quot; class=&quot;headerlink&quot; title=&quot;初识Package Verification&quot;&gt;&lt;/a&gt;初识Package Verification&lt;/h1&gt;&lt;p&gt;之前在做机器人操作系统的时候有过这样的需求，希望在安装应用的时候判断该应用是否符合机器人系统的操作规范，说白了就是需要扫描一下这个apk，是否符合某些规则。当然，这个需求可以在andoird 安装应用的过程实现。但是查看源码发现了Package Verification，这是一个没有多少文档介绍也没有相应demo的特性。&lt;/p&gt;
    
    </summary>
    
      <category term="android" scheme="http://robotshell.com/categories/android/"/>
    
    
      <category term="android" scheme="http://robotshell.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>android O 电源管理之从automotive谈起</title>
    <link href="http://robotshell.com/2018/02/04/android-O-%E7%94%B5%E6%BA%90%E7%AE%A1%E7%90%86%E4%B9%8B%E4%BB%8Eautomotive%E8%B0%88%E8%B5%B7/"/>
    <id>http://robotshell.com/2018/02/04/android-O-电源管理之从automotive谈起/</id>
    <published>2018-02-03T16:15:49.000Z</published>
    <updated>2019-08-12T06:32:26.234Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;android o 在源码工程/package/service/目录下新增了一个目录Car, 做为android automotive的重要组成部分，这部分可理解为在android世界的基础上，调用android的api构造出的Vehicle框架，该框架将android这一系统获得从手机迁移到目前最大的智能设备————车上的能力。&lt;br&gt;从automotive 开始分析android O 的电源管理，一方面可以站在android api用户的角度，从调用逐层的深入下去直达kernel，另一方面也可以帮助理清android automotive的框架结构。对于android automotive的框架结构的更详细的介绍可以参考另外的说明，本文当然重点还是在于从头到位的串讲下android O的电源管理。&lt;/p&gt;
    
    </summary>
    
      <category term="android" scheme="http://robotshell.com/categories/android/"/>
    
    
      <category term="android" scheme="http://robotshell.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>Android O Vehicle之Car Service</title>
    <link href="http://robotshell.com/2018/02/03/Android-O-Vehicle%E4%B9%8BCar-Service/"/>
    <id>http://robotshell.com/2018/02/03/Android-O-Vehicle之Car-Service/</id>
    <published>2018-02-03T10:28:49.000Z</published>
    <updated>2019-08-12T06:32:26.234Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Car Service 是 android O automotive 的核心实现。第一承担部分具体业务逻辑，第二向上为Car API 提供支撑，第三向下调用android api 或者调用 Vehicle Hal 获取车辆数据，控制车辆行为。&lt;/p&gt;
    
    </summary>
    
      <category term="android" scheme="http://robotshell.com/categories/android/"/>
    
    
      <category term="android" scheme="http://robotshell.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>Android O Vehicle之架构介绍</title>
    <link href="http://robotshell.com/2018/02/03/Android-O-Vehicle%E4%B9%8B%E6%9E%B6%E6%9E%84%E4%BB%8B%E7%BB%8D/"/>
    <id>http://robotshell.com/2018/02/03/Android-O-Vehicle之架构介绍/</id>
    <published>2018-02-03T10:28:31.000Z</published>
    <updated>2019-08-12T06:32:26.234Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Android Automotive 是 Android Orea 中的一个特色功能，从AOSP的代码上看，android automotive 已经包含了从app层到framework层到hal层的各层级结构。本文简单介绍 Android Orea Vehicle 的架构形式&lt;/p&gt;
    
    </summary>
    
      <category term="android" scheme="http://robotshell.com/categories/android/"/>
    
    
      <category term="android" scheme="http://robotshell.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>Android-EventLog-Tags 说明</title>
    <link href="http://robotshell.com/2018/01/08/Android-EventLog-Tags-%E8%AF%B4%E6%98%8E/"/>
    <id>http://robotshell.com/2018/01/08/Android-EventLog-Tags-说明/</id>
    <published>2018-01-08T15:35:54.000Z</published>
    <updated>2019-08-12T06:32:26.230Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;Event Log, 官方的解释为&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;System diagnostic event record. System diagnostic events are used to record certain system-level events (such as garbage collection, activity manager state, system watchdogs, and other low level activity), which may be automatically collected and analyzed during system development.&lt;br&gt;This is not the main “logcat” debugging log (Log)! These diagnostic events are for system integrators, not application authors.&lt;br&gt;Events use integer tag codes corresponding to /system/etc/event-log-tags. They carry a payload of one or more int, long, or String values. The event-log-tags file defines the payload contents for each type code.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;大概意思是说，是系统诊断事件的记录。这些事件都是系统级别事件，例如垃圾回收，ActivityManager的状态，系统看门够以及一些其他的事件。这些事件在系统开发的过程中会被自动的采集和分析。这些事件不是main debug调试log，它是给系统开发集成商看的，不是给应用开发者看的。&lt;/p&gt;
    
    </summary>
    
      <category term="android" scheme="http://robotshell.com/categories/android/"/>
    
    
      <category term="android" scheme="http://robotshell.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>Linux-安装和使用Cisco AnyConnect Client</title>
    <link href="http://robotshell.com/2018/01/07/Linux-%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8Cisco-AnyConnect-Client/"/>
    <id>http://robotshell.com/2018/01/07/Linux-安装和使用Cisco-AnyConnect-Client/</id>
    <published>2018-01-07T05:12:39.000Z</published>
    <updated>2019-08-12T06:32:26.230Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;以前使用的vpn到期了，而且最近查的挺严，原先的好多vpn都用不了了，在同事的推荐下使用&lt;a href=&quot;https://edgevpn.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;矩阵研究所&lt;/strong&gt;
&lt;/a&gt;自己搭建的shadowsocks翻墙上网，他提供了windows、ios、android各平台的客户端，唯独未提供linux的客户端。不过他还好支持anyconnect，所以在linux还是可以配置anyconnect client 进行使用的。配置过程记录如下，供以后参考。&lt;/p&gt;
    
    </summary>
    
      <category term="工具" scheme="http://robotshell.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="工具" scheme="http://robotshell.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Linux 版本控制工具之rabbitvcs</title>
    <link href="http://robotshell.com/2017/11/04/Linux-%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E5%B7%A5%E5%85%B7%E4%B9%8BRabbitvcs/"/>
    <id>http://robotshell.com/2017/11/04/Linux-版本控制工具之Rabbitvcs/</id>
    <published>2017-11-04T04:08:10.000Z</published>
    <updated>2019-08-12T06:32:26.230Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;新公司的文档管理居然使用ｓｖｎ，不知道适合原因．很久不用有一些忘却了.之前在win下用的是TortoiseSVN，在ubuntu下，与之及其相似的是rabbitvcs．&lt;br&gt;&lt;a href=&quot;http://rabbitvcs.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官网地址&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="工具" scheme="http://robotshell.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="工具" scheme="http://robotshell.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>纵论物联网（三）：3GPP物联网技术</title>
    <link href="http://robotshell.com/2017/10/26/%E7%BA%B5%E8%AE%BA%E7%89%A9%E8%81%94%E7%BD%91%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A3GPP%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF/"/>
    <id>http://robotshell.com/2017/10/26/纵论物联网（三）：3GPP物联网技术/</id>
    <published>2017-10-25T16:00:00.000Z</published>
    <updated>2019-08-12T06:32:26.230Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;导语&lt;br&gt;随着物联网应用的发展，对于大范围组网的需求越来越多，LPWAN技术备受关注。前面的LPWAN技术文章介绍过，LPWAN技术可根据工作频段分为两类：一类是工作于未授权频段的无线技术，以LoRa、SigFox为代表；一类是工作于授权频段下的无线技术，以3GPP支持的2/3/4G蜂窝通信技术为代表。&lt;br&gt;&lt;img src=&quot;http://ovfro7ddi.bkt.clouddn.com/%EF%BC%93GPP%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%EF%BC%91.JPEG&quot; alt=&quot;3GPP物联网技术&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="物联网" scheme="http://robotshell.com/categories/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
    
      <category term="物联网" scheme="http://robotshell.com/tags/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>纵论物联网（二）：LPWAN技术</title>
    <link href="http://robotshell.com/2017/10/26/%E7%BA%B5%E8%AE%BA%E7%89%A9%E8%81%94%E7%BD%91%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9ALPWAN%E6%8A%80%E6%9C%AF/"/>
    <id>http://robotshell.com/2017/10/26/纵论物联网（二）：LPWAN技术/</id>
    <published>2017-10-25T16:00:00.000Z</published>
    <updated>2019-08-12T06:32:26.230Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;不同的物联网技术适用于不同的应用场景。对于需要远距离大范围覆盖的场景来说，我们熟悉的蓝牙、WiFi、Zigbee这些技术都不适合，我们需要低功耗广域网（LPWAN：Low Power Wide Area Network）技术。&lt;br&gt;&lt;img src=&quot;http://ovfro7ddi.bkt.clouddn.com/LWPAN%E6%8A%80%E6%9C%AF%E4%B8%80.JPEG&quot; alt=&quot;LPWAN 技术特点&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="物联网" scheme="http://robotshell.com/categories/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
    
      <category term="物联网" scheme="http://robotshell.com/tags/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>纵论物联网（五）：除了Linux，还有什么物联网操作系统</title>
    <link href="http://robotshell.com/2017/10/26/%E7%BA%B5%E8%AE%BA%E7%89%A9%E8%81%94%E7%BD%91%EF%BC%88%E4%BA%94%EF%BC%89%EF%BC%9A%E9%99%A4%E4%BA%86Linux%EF%BC%8C%E8%BF%98%E6%9C%89%E4%BB%80%E4%B9%88%E7%89%A9%E8%81%94%E7%BD%91%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    <id>http://robotshell.com/2017/10/26/纵论物联网（五）：除了Linux，还有什么物联网操作系统/</id>
    <published>2017-10-25T16:00:00.000Z</published>
    <updated>2019-08-12T06:32:26.230Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在前面介绍物联网终端设备的文章中，我们已经简单地介绍了物联网操作系统。物联网操作系统的种类非常多，不过其中有很大一部分是基于Linux系统改造的，还有一些系统是商业公司或开源组织开发的，当然微软公司也开发了一系列面向嵌入式应用的操作系统。&lt;br&gt;&lt;img src=&quot;http://p1.pstatp.com/large/26e400043526f2087cb0&quot; alt=&quot;物联网操作系统&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="物联网" scheme="http://robotshell.com/categories/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
    
      <category term="物联网" scheme="http://robotshell.com/tags/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>纵论物联网（八）：面向可穿戴设备的无线物联网技术</title>
    <link href="http://robotshell.com/2017/10/26/%E7%BA%B5%E8%AE%BA%E7%89%A9%E8%81%94%E7%BD%91%EF%BC%88%E5%85%AB%EF%BC%89%EF%BC%9A%E9%9D%A2%E5%90%91%E5%8F%AF%E7%A9%BF%E6%88%B4%E8%AE%BE%E5%A4%87%E7%9A%84%E6%97%A0%E7%BA%BF%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF/"/>
    <id>http://robotshell.com/2017/10/26/纵论物联网（八）：面向可穿戴设备的无线物联网技术/</id>
    <published>2017-10-25T16:00:00.000Z</published>
    <updated>2019-08-12T06:32:26.230Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;导语&lt;br&gt;智能手环、智能手表为代表的可穿戴设备，在短短几年时间内，就已经在全世界普及开来。可穿戴设备是物联网领域很重要的一种设备类型，特点是功耗低、体积小、电量有限 。本文主要介绍可应用于可穿戴设备的无线技术有哪些？&lt;br&gt;&lt;img src=&quot;http://ovfro7ddi.bkt.clouddn.com/%E9%9D%A2%E5%90%91%E5%8F%AF%E7%A9%BF%E6%88%B4%E8%AE%BE%E5%A4%87%E7%9A%84%E6%97%A0%E7%BA%BF%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF1.JPEG&quot; alt=&quot;纵论物联网（八）：面向可穿戴设备的无线物联网技术&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="物联网" scheme="http://robotshell.com/categories/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
    
      <category term="物联网" scheme="http://robotshell.com/tags/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>纵论物联网（六）：基于Linux的物联网操作系统</title>
    <link href="http://robotshell.com/2017/10/26/%E7%BA%B5%E8%AE%BA%E7%89%A9%E8%81%94%E7%BD%91%EF%BC%88%E5%85%AD%EF%BC%89%EF%BC%9A%E5%9F%BA%E4%BA%8ELinux%E7%9A%84%E7%89%A9%E8%81%94%E7%BD%91%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    <id>http://robotshell.com/2017/10/26/纵论物联网（六）：基于Linux的物联网操作系统/</id>
    <published>2017-10-25T16:00:00.000Z</published>
    <updated>2019-08-12T06:32:26.230Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;提到物联网操作系统，就不能不提Linux，因为Linux可能是目前在物联网设备中应用最广的操作系统了。前面的文章刚刚介绍了不少非Linux类的物联网操作系统，本文就来介绍一下目前常用的基于Linux的物联网操作系统。&lt;br&gt;&lt;img src=&quot;http://images.ofweek.com/Upload/News/2017-06/14/lime/1497400939793024893.jpg&quot; alt=&quot;基于Linux的物联网操作系统&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="物联网" scheme="http://robotshell.com/categories/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
    
      <category term="物联网" scheme="http://robotshell.com/tags/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>纵论物联网（十）：物联网应用层协议</title>
    <link href="http://robotshell.com/2017/10/26/%E7%BA%B5%E8%AE%BA%E7%89%A9%E8%81%94%E7%BD%91%EF%BC%88%E5%8D%81%EF%BC%89%EF%BC%9A%E7%89%A9%E8%81%94%E7%BD%91%E5%BA%94%E7%94%A8%E5%B1%82%E5%8D%8F%E8%AE%AE/"/>
    <id>http://robotshell.com/2017/10/26/纵论物联网（十）：物联网应用层协议/</id>
    <published>2017-10-25T16:00:00.000Z</published>
    <updated>2019-08-12T06:32:26.230Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;导语&lt;br&gt;物联网的关键技术主要解决三个方面的问题：&lt;u&gt;物体的识别、物体的连接、物体的数据交换&lt;/u&gt;。每个方面都有一些技术解决方案，在前面的文章中，我们介绍了RFID、NFC等物体识别及电子标签的技术，也介绍了物联网节点组网与接入的技术。这篇文章主要讲一下物联网的数据是如何处理的。&lt;br&gt;&lt;img src=&quot;http://ovfro7ddi.bkt.clouddn.com/%E7%89%A9%E8%81%94%E7%BD%91%E5%BA%94%E7%94%A8%E5%B1%82%E5%8D%8F%E8%AE%AE%EF%BC%91.JPEG&quot; alt=&quot;keyTec&quot;&gt;&lt;br&gt;物联网关键技术大全&lt;/p&gt;
    
    </summary>
    
      <category term="物联网" scheme="http://robotshell.com/categories/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
    
      <category term="物联网" scheme="http://robotshell.com/tags/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>纵论物联网</title>
    <link href="http://robotshell.com/2017/10/26/%E7%BA%B5%E8%AE%BA%E7%89%A9%E8%81%94%E7%BD%91/"/>
    <id>http://robotshell.com/2017/10/26/纵论物联网/</id>
    <published>2017-10-25T16:00:00.000Z</published>
    <updated>2019-08-12T06:32:26.230Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;最近在网上看到一篇介绍物联网的系列文章《纵论物联网》，但是很遗憾，都是来回转载的，也没有找到出处，零零散散的，东一篇西一篇，看起来很不方便。现汇总收集如下，既做整理，也做收藏。&lt;/p&gt;
    
    </summary>
    
      <category term="物联网" scheme="http://robotshell.com/categories/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
    
      <category term="物联网" scheme="http://robotshell.com/tags/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>纵论物联网（一）：无线技术分类</title>
    <link href="http://robotshell.com/2017/10/26/%E7%BA%B5%E8%AE%BA%E7%89%A9%E8%81%94%E7%BD%91%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E6%97%A0%E7%BA%BF%E6%8A%80%E6%9C%AF%E5%88%86%E7%B1%BB/"/>
    <id>http://robotshell.com/2017/10/26/纵论物联网（一）：无线技术分类/</id>
    <published>2017-10-25T16:00:00.000Z</published>
    <updated>2019-08-12T06:32:26.230Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;物联网的关键技术包括三个方面：物体的识别、物体的连接以及对数据的操作。随着联网物体的数量越来越多，无线技术在物联网中发挥的作用也越来越大。&lt;br&gt;&lt;img src=&quot;http://p1.pstatp.com/large/22d2000589af2a27d43f&quot; alt=&quot;纵论物联网（一）：无线技术分类&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;物联网无线技术分类&quot;&gt;&lt;a href=&quot;#物联网无线技术分类&quot; class=&quot;headerlink&quot; title=&quot;物联网无线技术分类&quot;&gt;&lt;/a&gt;物联网无线技术分类&lt;/h1&gt;
    
    </summary>
    
      <category term="物联网" scheme="http://robotshell.com/categories/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
    
      <category term="物联网" scheme="http://robotshell.com/tags/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
  </entry>
  
</feed>
